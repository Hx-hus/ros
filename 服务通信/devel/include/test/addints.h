// Generated by gencpp from file test/addints.msg
// DO NOT EDIT!


#ifndef TEST_MESSAGE_ADDINTS_H
#define TEST_MESSAGE_ADDINTS_H

#include <ros/service_traits.h>


#include <test/addintsRequest.h>
#include <test/addintsResponse.h>


namespace test
{

struct addints
{

typedef addintsRequest Request;
typedef addintsResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct addints
} // namespace test


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::test::addints > {
  static const char* value()
  {
    return "4781436a0c2affec8025955a6041e481";
  }

  static const char* value(const ::test::addints&) { return value(); }
};

template<>
struct DataType< ::test::addints > {
  static const char* value()
  {
    return "test/addints";
  }

  static const char* value(const ::test::addints&) { return value(); }
};


// service_traits::MD5Sum< ::test::addintsRequest> should match
// service_traits::MD5Sum< ::test::addints >
template<>
struct MD5Sum< ::test::addintsRequest>
{
  static const char* value()
  {
    return MD5Sum< ::test::addints >::value();
  }
  static const char* value(const ::test::addintsRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::test::addintsRequest> should match
// service_traits::DataType< ::test::addints >
template<>
struct DataType< ::test::addintsRequest>
{
  static const char* value()
  {
    return DataType< ::test::addints >::value();
  }
  static const char* value(const ::test::addintsRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::test::addintsResponse> should match
// service_traits::MD5Sum< ::test::addints >
template<>
struct MD5Sum< ::test::addintsResponse>
{
  static const char* value()
  {
    return MD5Sum< ::test::addints >::value();
  }
  static const char* value(const ::test::addintsResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::test::addintsResponse> should match
// service_traits::DataType< ::test::addints >
template<>
struct DataType< ::test::addintsResponse>
{
  static const char* value()
  {
    return DataType< ::test::addints >::value();
  }
  static const char* value(const ::test::addintsResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // TEST_MESSAGE_ADDINTS_H
